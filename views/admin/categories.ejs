<div class="min-h-screen p-4 md:p-6 lg:p-8">
  <div class="max-w-7xl mx-auto">
    <!-- Categories list -->
    <div class="space-y-4">
      <% categories.forEach((category, index) => { %>
        <div 
          class="bg-white bg-opacity-90 backdrop-blur-sm text-black rounded-lg p-4 flex justify-between items-center transform transition-all duration-500 hover:scale-[1.02] hover:shadow-xl"
          style="animation: slideIn 0.6s cubic-bezier(0.16, 1, 0.3, 1) forwards; animation-delay: <%= index * 0.1 %>s; opacity : 0; transform: translateY(20px);"
        >
          <div class="font-medium"><%= category.name %></div>
          <div class="flex space-x-2">
            <button 
              onclick="openEditModal('<%= category.id %>', '<%= category.name %>')"
              class="bg-black text-white px-4 py-2 rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-800 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 focus:outline-none"
            >
              Edit
            </button>
            <button 
              onclick="confirmRemove('<%= category.id %>', '<%= category.name %>')"
              class="bg-black text-white px-4 py-2 rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-800 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 focus:outline-none"
            >
              Remove
            </button>
          </div>
        </div>
      <% }); %>
    </div>

    <!-- Add Category Button -->
    <div class="mt-8 flex justify-end">
      <button 
        onclick="openAddModal()"
        class="bg-white text-black px-6 py-3 rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-300 focus:ring-2 focus:ring-green-400 focus:ring-opacity-50 focus:outline-none font-medium"
      >
        Add New Category
      </button>
    </div>

    

    <!-- Add Category Modal -->
    <div id="addModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center hidden z-50">
      <div 
        class="bg-white text-black p-6 rounded-lg shadow-lg max-w-md w-full transform transition-all duration-300 scale-95 opacity-0"
        id="addModalContent"
      >
        <h3 class="text-xl font-bold mb-4">Add New Category</h3>
        <form id="addForm" class="space-y-4" onsubmit="addCategory(event)">
          <div>
            <label for="newCategoryName" class="block text-sm font-medium text-gray-700 mb-1">Category Name</label>
            <input 
              type="text" 
              id="newCategoryName" 
              name="name" 
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-black focus:border-black outline-none transition-all duration-200"
              required
            >
          </div>
          
          <div class="flex justify-end space-x-4 mt-6">
            <button 
              type="button"
              onclick="closeAddModal()"
              class="px-4 py-2 border border-gray-300 rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-100 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 focus:outline-none"
            >
              Cancel
            </button>
            <button 
              type="submit"
              class="px-4 py-2 bg-black text-white rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-600 focus:ring-2 focus:ring-green-400 focus:ring-opacity-50 focus:outline-none"
            >
              Add Category
            </button>
          </div>
        </form> 
      </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center hidden z-50">
      <div 
        class="bg-white text-black p-6 rounded-lg shadow-lg max-w-md w-full transform transition-all duration-300 scale-95 opacity-0"
        id="editModalContent"
      >
        <h3 class="text-xl font-bold mb-4">Edit Category</h3>
        <form id="editForm" class="space-y-4" onsubmit="updateCategory(event)">
          <div>
            <label for="categoryName" class="block text-sm font-medium text-gray-700 mb-1">Category Name</label>
            <input 
              type="text" 
              id="categoryName" 
              name="name" 
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all duration-200"
              required
            >
          </div>
          
          <div class="flex justify-end space-x-4 mt-6">
            <button 
              type="button"
              onclick="closeEditModal()"
              class="px-4 py-2 border border-gray-300 rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-100 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 focus:outline-none"
            >
              Cancel
            </button>
            <button 
              type="submit"
              class="px-4 py-2 bg-green-600 text-white rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-blue-700 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 focus:outline-none"
            >
              Save Changes
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Remove Confirmation Modal -->
    <div id="confirmationModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center hidden z-50">
      <div 
        class="bg-white text-black p-6 rounded-lg shadow-lg max-w-md w-full transform transition-all duration-300 scale-95 opacity-0"
        id="modalContent"
      >
        <h3 class="text-xl font-bold mb-4">Confirm Removal</h3>
        <p class="mb-6">Are you sure you want to remove "<span id="categoryNameToRemove"></span>"? This action cannot be undone.</p>
        
        <div class="flex justify-end space-x-4">
          <button 
            onclick="closeModal()"
            class="px-4 py-2 border border-gray-300 rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-gray-100 focus:ring-2 focus:ring-gray-400 focus:ring-opacity-50 focus:outline-none"
          >
            Cancel
          </button>
          <button 
            onclick="removeCategory()"
            class="px-4 py-2 bg-red-600 text-white rounded-lg transform transition-all duration-300 hover:scale-105 hover:bg-red-700 focus:ring-2 focus:ring-red-400 focus:ring-opacity-50 focus:outline-none"
          >
            Remove
          </button>
        </div>
      </div>
    </div>

    <style>
      @keyframes slideIn {
        from { 
          opacity: 0;
          transform: translateY(20px);
        }
        to { 
          opacity: 1;
          transform: translateY(0);
        }
      }

      .modal-open {
        overflow: hidden;
      }

      #modalContent.show,
      #editModalContent.show,
      #addModalContent.show {
        transform: scale(1);
        opacity: 1;
      }
    </style>

    <script>
      let currentCategoryId = null;
      const modal = document.getElementById('confirmationModal');
      const modalContent = document.getElementById('modalContent');
      const categoryNameSpan = document.getElementById('categoryNameToRemove');
      const editModal = document.getElementById('editModal');
      const editModalContent = document.getElementById('editModalContent');
      const categoryNameInput = document.getElementById('categoryName');
      const addModal = document.getElementById('addModal');
      const addModalContent = document.getElementById('addModalContent');
      const newCategoryNameInput = document.getElementById('newCategoryName');

      function openAddModal() {
        newCategoryNameInput.value = '';
        addModal.classList.remove('hidden');
        setTimeout(() => addModalContent.classList.add('show'), 10);
        document.body.classList.add('modal-open');
      }

      function closeAddModal() {
        addModalContent.classList.remove('show');
        setTimeout(() => {
          addModal.classList.add('hidden');
          document.body.classList.remove('modal-open');
        }, 300);
      }

      function addCategory(event) {
        event.preventDefault();
        fetch('/admin/category/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name: newCategoryNameInput.value
          })
        })
        .then(response => {
          if (response.ok) {
            window.location.reload();
          }
        })
        .catch(error => console.error('Error:', error))
        .finally(() => closeAddModal());
      }

      function openEditModal(id, name) {
        currentCategoryId = id;
        categoryNameInput.value = name;
        editModal.classList.remove('hidden');
        setTimeout(() => editModalContent.classList.add('show'), 10);
        document.body.classList.add('modal-open');
      }

      function closeEditModal() {
        editModalContent.classList.remove('show');
        setTimeout(() => {
          editModal.classList.add('hidden');
          document.body.classList.remove('modal-open');
          currentCategoryId = null;
        }, 300);
      }

      function updateCategory(event) {
        event.preventDefault();
        if (currentCategoryId) {
          fetch(`/admin/category/edit/${currentCategoryId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              name: categoryNameInput.value
            })
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            }
          })
          .catch(error => console.error('Error:', error))
          .finally(() => closeEditModal());
        }
      }

      function confirmRemove(id, name) {
        currentCategoryId = id;
        categoryNameSpan.textContent = name;
        modal.classList.remove('hidden');
        setTimeout(() => modalContent.classList.add('show'), 10);
        document.body.classList.add('modal-open');
      }

      function closeModal() {
        modalContent.classList.remove('show');
        setTimeout(() => {
          modal.classList.add('hidden');
          document.body.classList.remove('modal-open');
          currentCategoryId = null;
        }, 300);
      }

      function removeCategory() {
        if (currentCategoryId) {
          fetch(`/admin/category/delete/${currentCategoryId}`, {
            method: 'DELETE',
          })
          .then(response => {
            if (response.ok) {
              window.location.reload();
            }
          })
          .catch(error => console.error('Error:', error))
          .finally(() => closeModal());
        }
      }

      modal.addEventListener('click', (e) => {
        if (e.target === modal) {
          closeModal();
        }
      });

      editModal.addEventListener('click', (e) => {
        if (e.target === editModal) {
          closeEditModal();
        }
      });

      addModal.addEventListener('click', (e) => {
        if (e.target === addModal) {
          closeAddModal();
        }
      });

      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          if (!modal.classList.contains('hidden')) {
            closeModal();
          }
          if (!editModal.classList.contains('hidden')) {
            closeEditModal();
          }
          if (!addModal.classList.contains('hidden')) {
            closeAddModal();
          }
        }
      });
    </script>
  </div>
</div>